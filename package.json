{
	"name": "lempire",
	"displayName": "lempire",
	"publisher": "lempire",
	"description": "lempire vscode extension",
	"version": "1.0.28",
	"engines": {
		"vscode": "^1.85.0"
	},
	"icon": "icon.png",
	"categories": [
		"Other"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/l3mpire/vscode-extensions.git"
	},
	"activationEvents": [
		"onCommand:lempire.tSurroundJavaScript",
		"onCommand:lempire.tSurroundJsx",
		"onCommand:lempire.tSurroundHTML"
],
	"main": "./dist/extension.js",
	"contributes": {
		"keybindings": [
      {
        "command": "lempire.tSurroundJavaScript",
        "key": "ctrl+t",
        "mac": "cmd+t",
        "when": "(editorHasSelection || editorHasMultipleSelections) && (resourceLangId == javascript || resourceLangId == typescript)"
      },
			{
        "command": "lempire.tSurroundJsx",
        "key": "ctrl+t",
        "mac": "cmd+t",
        "when": "(editorHasSelection || editorHasMultipleSelections) && (resourceLangId == javascriptreact || resourceLangId == typescriptreact)"
      },
			{
        "command": "lempire.tSurroundHTML",
        "key": "ctrl+t",
        "mac": "cmd+t",
        "when": "(editorHasSelection || editorHasMultipleSelections) && (resourceLangId == html || resourceLangId == handlebars || resourceLangId == spacebars)"
      }
    ],
		"commands": [
			{
				"command": "lempire.tSurroundJavaScript",
				"title": "lempire: Surround the string with _t (CallExpression)"
			},
			{
				"command": "lempire.tSurroundJsx",
				"title": "lempire: Surround the string with _t (CallExpression)"
			},
			{
				"command": "lempire.tSurroundHTML",
				"title": "lempire: Surround the string with {{_t}} (CallExpression) [HTML]"
			},
			{
				"command": "lempire.tSurroundHTMLSafeString",
				"title": "lempire: Surround the string with {{{_t}}} (CallExpression) [HTML SAFE STRING]"
			},
			{
				"command": "lempire.tSurroundHTMLAttr",
				"title": "lempire: Surround the string with (_t) (CallExpression) [HTML ATTRIBUTE]"
			},
			{
				"command": "lempire.createTrio",
				"title": "lempire: Create trio (JavaScript, HTML, Scss)"
			},
			{
				"command": "lempire.createClientServerPack",
				"title": "lempire: Create client/server files (JavaScript, HTML, Scss)"
			}
		],
		"menus": {
			"explorer/context": [
				{
					"command": "lempire.createTrio",
					"when": "explorerResourceIsFolder && resourceFilename",
					"group": "lempire"
				},
				{
					"command": "lempire.createClientServerPack",
					"when": "explorerResourceIsFolder && resourceFilename",
					"group": "lempire"
				}
			],
			"editor/context": [
				{
					"when": "(editorHasSelection || editorHasMultipleSelections) && (resourceLangId == javascript || resourceLangId == typescript)",
					"command": "lempire.tSurroundJavaScript",
					"group": "lempire"
				},
				{
					"when": "(editorHasSelection || editorHasMultipleSelections) && (resourceLangId == javascriptreact || resourceLangId == typescriptreact)",
					"command": "lempire.tSurroundJsx",
					"group": "lempire"
				},
				{
					"when": "(editorHasSelection || editorHasMultipleSelections) && (resourceLangId == html || resourceLangId == handlebars || resourceLangId == spacebars)",
					"command": "lempire.tSurroundHTML",
					"group": "lempire"
				},
				{
					"when": "(editorHasSelection || editorHasMultipleSelections) && (resourceLangId == html || resourceLangId == handlebars || resourceLangId == spacebars)",
					"command": "lempire.tSurroundHTMLSafeString",
					"group": "lempire"
				},
				{
					"when": "(editorHasSelection || editorHasMultipleSelections) && (resourceLangId == html || resourceLangId == handlebars || resourceLangId == spacebars)",
					"command": "lempire.tSurroundHTMLAttr",
					"group": "lempire"
				}
			]
		},
		"grammars": [
			{
				"path": "./src/syntaxes/t.json",
				"scopeName": "text.html.handlebars.t",
				"injectTo": [
					"text.html.handlebars",
					"text.html.spacebars"
				]
			}
		],
		"semanticTokenTypes": [
			{
				"id": "tParam",
				"superType": "tParam",
				"description": "_t param"
			},
			{
				"id": "tTag",
				"superType": "tTag",
				"description": "_t param"
			},
			{
				"id": "tStandard",
				"superType": "tStandard",
				"description": "_t string"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "webpack",
		"watch": "webpack --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"compile-tests": "tsc -p . --outDir out",
		"watch-tests": "tsc -p . -w --outDir out",
		"pretest": "npm run compile-tests && npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "vscode-test"
	},
	"devDependencies": {
		"@types/vscode": "^1.85.0",
		"@types/mocha": "^10.0.6",
		"@types/node": "18.x",
		"@typescript-eslint/eslint-plugin": "^6.15.0",
		"@typescript-eslint/parser": "^6.15.0",
		"eslint": "^8.56.0",
		"typescript": "^5.3.3",
		"ts-loader": "^9.5.1",
		"webpack": "^5.89.0",
		"webpack-cli": "^5.1.4",
		"@vscode/test-cli": "^0.0.4",
		"@vscode/test-electron": "^2.3.8"
	}
}
